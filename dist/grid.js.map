{"version":3,"sources":["../src/grid.jsx"],"names":["Grid","props","_scrolling","_pinnedColumnWidths","_pinnedRowHeights","_sizeDetector","strategy","state","componentDidMount","listenTo","_root","handleResize","update","scrollOptions","disableMouse","bounce","scrollX","freeScroll","scrollbars","probeType","mouseWheel","preventDefault","interactiveScrollbars","_scroller","_scrollInner","on","handleScroll","handleScrollStart","handleScrollEnd","componentWillReceiveProps","nextProps","refresh","componentWillUnmount","uninstall","off","destroy","render","styles","contentStyle","scrollContent","position","width","calculateScrollableWidth","cells","height","calculateScrollableHeight","container","bindRoot","scrollOverlay","bindScrollOverlay","scrollContainer","bindScrollInner","gridBody","renderLeftPane","renderRightPane","renderCenterPane","renderColumnResizeGuide","renderRowResizeGuide","attrs","pane","left","fixedLeftColumnsWidth","bindLeftPane","renderLeftPaneHeader","renderLeftPaneFooter","renderLeftPaneBody","fixedLeftColumnCount","top","right","calculateFixedHeadersHeight","bindLeftPaneHeader","leftPaneHeaderContent","renderCellRange","fixedHeaderCount","topLeftRows","topLeftColumns","fixedFooterCount","bottom","calculateFixedFootersHeight","fromRow","rowCount","toRow","bindLeftPaneFooter","leftPaneFooterContent","bottomLeftRows","bottomLeftColumns","estimatedColumnWidth","estimatedRowHeight","translatedPane","leftRows","length","bindLeftPaneBody","leftPaneBodyContent","leftColumns","fixedRightColumnCount","fixedRightColumnsWidth","bindRightPane","renderRightPaneHeader","renderRightPaneFooter","renderRightPaneBody","fromColumn","columnCount","toColumn","bindRightPaneHeader","rightPaneHeaderContent","topRightRows","topRightColumns","bindRightPaneFooter","rightPaneFooterContent","bottomRightRows","bottomRightColumns","bindRightPaneBody","rightPaneBodyContent","rightRows","rightColumns","bindCenterPane","renderCenterPaneHeader","renderCenterPaneFooter","renderCenterPaneBody","overflow","topColumns","bindCenterPaneHeader","centerPaneHeaderContent","topRows","bottomColumns","bindCenterPaneFooter","bottomRows","rows","columns","bindCenterPaneBody","centerPaneBodyContent","_resizingColumn","column","find","cell","guideStyle","columnResizeGuide","_centerPaneBody","offsetTop","_resizingRow","row","rowResizeGuide","_leftPane","offsetWidth","lastColumn","lastRow","lastTopLeftRow","topOffset","lastBottomRow","lastBottomRowTop","invalidateSizes","calculator","invalidate","scrollTop","scrollLeft","force","x","preloadPixelsX","y","preloadPixelsY","bounds","Math","max","clientWidth","clientHeight","cellsWithinBounds","changed","onExtentsChange","setState","setScroll","scrollableWidth","scrollableHeight","_lastScrollableWidth","_lastScrollableHeight","diffY","diffX","setTimeout","updatedScrollLeft","updatedScrollTop","scrollTo","fixedHeadersHeight","_leftPaneBody","childNodes","style","_rightPaneBody","_centerPaneHeader","_centerPaneFooter","_scrollOverlay","offsetHeight","_rightPane","_centerPane","clearPinnedWidths","clearPinnedWidth","columnIndex","clearPinnedHeights","clearPinnedHeight","rowIndex","renderCells","renderRows","rowRange","renderCell","renderRow","visibleRowIndex","rowCells","rowData","columnRange","visibleColumnIndex","columnData","push","lastOffset","_calculator","calculateRowHeight","calculateColumnWidth","Component","propTypes","number","isRequired","columnWidth","oneOfType","func","rowHeight","onScrollStart","onScroll","onScrollEnd","object","defaultProps","node","_leftPaneHeader","_leftPaneFooter","_rightPaneHeader","_rightPaneFooter","event","handleColumnResizeStart","handleColumnResize","min","handleColumnResizeEnd","handleRowResizeStart","handleRowResize","handleRowResizeEnd","rowTop","rowStyle","backgroundColor","cursor","borderRadius"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;;IAEqBA,I;;;AAwDnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,4BAAMA,KAAN,CADiB;;AAAA;;AAGjB,UAAKC,UAAL,GAAkB,KAAlB;;AAEA,UAAKC,mBAAL,GAA2B,EAA3B;AACA,UAAKC,iBAAL,GAAyB,EAAzB;;AAEA,UAAKC,aAAL,GAAqB,qCAAsB,EAACC,UAAU,QAAX,EAAtB,CAArB;;AAEA,UAAKC,KAAL,GAAa,EAAb;AAViB;AAWlB;;iBAEDC,iB,gCAAoB;AAClB,SAAKH,aAAL,CAAmBI,QAAnB,CAA4B,KAAKC,KAAjC,EAAwC,KAAKC,YAA7C;;AAEA,SAAKC,MAAL,CAAY,CAAZ,EAAe,CAAf;;AAEA,QAAMC;AACJC,oBAAc,IADV;AAEJC,cAAQ,KAFJ,EAEW;AACfC,eAAS,IAHL;AAIJC,kBAAY,IAJR;AAKJC,kBAAY,IALR;AAMJC,iBAAW,CANP;AAOJC,kBAAY,IAPR;AAQJC,sBAAgB,KARZ;AASJC,6BAAuB;AATnB,OAUD,KAAKrB,KAAL,CAAWY,aAVV,CAAN;;AAaA,SAAKU,SAAL,GAAiB,2BAAY,KAAKC,YAAjB,EAA+BX,aAA/B,CAAjB;AACA,SAAKU,SAAL,CAAeE,EAAf,CAAkB,QAAlB,EAA4B,KAAKC,YAAjC;AACA,SAAKH,SAAL,CAAeE,EAAf,CAAkB,aAAlB,EAAiC,KAAKE,iBAAtC;AACA,SAAKJ,SAAL,CAAeE,EAAf,CAAkB,WAAlB,EAA+B,KAAKG,eAApC;AACD,G;;iBAEDC,yB,sCAA0BC,S,EAAW;AACnC,SAAKC,OAAL,CAAa,IAAb,EAAmBD,SAAnB;AACD,G;;iBAEDE,oB,mCAAuB;AACrB,SAAK3B,aAAL,CAAmB4B,SAAnB,CAA6B,KAAKvB,KAAlC;;AAEA,SAAKa,SAAL,CAAeW,GAAf,CAAmB,QAAnB,EAA6B,KAAKR,YAAlC;AACA,SAAKH,SAAL,CAAeW,GAAf,CAAmB,aAAnB,EAAkC,KAAKP,iBAAvC;AACA,SAAKJ,SAAL,CAAeW,GAAf,CAAmB,WAAnB,EAAgC,KAAKN,eAArC;AACA,SAAKL,SAAL,CAAeY,OAAf;AACD,G;;iBAEDC,M,qBAAS;AAAA,QACAC,MADA,GACUrC,IADV,CACAqC,MADA;;;AAGP,QAAMC,4BACDD,OAAOE,aADN;AAEJC,gBAAU,UAFN;AAGJC,aAAO,KAAKC,wBAAL,CAA8B,KAAKzC,KAAnC,EAA0C,KAAKM,KAAL,CAAWoC,KAArD,CAHH;AAIJC,cAAQ,KAAKC,yBAAL,CAA+B,KAAK5C,KAApC,EAA2C,KAAKM,KAAL,CAAWoC,KAAtD;AAJJ,MAAN;;AAOA,WACE;AAAA;AAAA,QAAK,OAAON,OAAOS,SAAnB;AACK,aAAK,KAAKC,QADf;AAEK,aAAI,WAFT;AAGE;AAAA;AAAA,UAAK,OAAOV,OAAOW,aAAnB;AACK,eAAK,KAAKC,iBADf;AAEK,eAAI,qBAFT;AAGE;AAAA;AAAA,YAAK,WAAU,cAAf;AACK,mBAAOZ,OAAOa,eADnB;AAEK,iBAAK,KAAKC,eAFf;AAGK,iBAAI,mBAHT;AAIE;AAAA;AAAA,cAAK,WAAW,0BAAG,kBAAH,CAAhB;AACK,qBAAOb,YADZ;AAEK,mBAAI,uBAFT;AAGE;AAAA;AAAA,gBAAK,OAAOD,OAAOe,QAAnB;AACK,qBAAI,kBADT;AAEG,mBAAKC,cAAL,EAFH;AAGG,mBAAKC,eAAL,EAHH;AAIG,mBAAKC,gBAAL,EAJH;AAKG,mBAAKC,uBAAL,EALH;AAMG,mBAAKC,oBAAL;AANH;AAHF;AAJF;AAHF;AAHF,KADF;AA2BD,G;;iBAEDJ,c,6BAAiB;AAAA,QACRhB,MADQ,GACErC,IADF,CACRqC,MADQ;;;AAGf,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJnB,aAAO,KAAKoB;AAHR,MAAN;;AAMA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKC,YAAf;AACK,mBAAW,0BAAG,WAAH,CADhB;AAEK,eAAOJ,KAFZ;AAGK,aAAI,gBAHT;AAIG,WAAKK,oBAAL,EAJH;AAKG,WAAKC,oBAAL,EALH;AAMG,WAAKC,kBAAL;AANH,KADF;AAUD,G;;iBAEDF,oB,mCAAuB;AACrB,QAAI,CAAC,KAAKxD,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAWiE,oBAAX,GAAkC,CAA3D,EAA8D;AAC5D,aAAO,IAAP;AACD;;AAHoB,QAKd7B,MALc,GAKJrC,IALI,CAKdqC,MALc;;;AAOrB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJO,WAAK,CAHD;AAIJC,aAAO,CAJH;AAKJxB,cAAQ,KAAKyB,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML,eAAe,EAArB;;AAGA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKgC,kBAAf;AACK,mBAAW,0BAAG,kBAAH,CADhB;AAEK,eAAOZ,KAFZ;AAGK,aAAI,uBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAOkC,qBAAV,CAAhB;AACK,iBAAOjC,YADZ;AAEK,eAAI,+BAFT;AAGG,aAAKkC,eAAL,CAAqB,kBAArB,EAAyC,CAAzC,EAA4C,KAAKvE,KAAL,CAAWwE,gBAAX,GAA8B,CAA1E,EAA6E,CAA7E,EAAgF,KAAKxE,KAAL,CAAWiE,oBAAX,GAAkC,CAAlH,EAAqH,KAAK3D,KAAL,CAAWoC,KAAX,CAAiB+B,WAAtI,EAAmJ,KAAKnE,KAAL,CAAWoC,KAAX,CAAiBgC,cAApK;AAHH;AAJF,KADF;AAYD,G;;iBAEDX,oB,mCAAuB;AACrB,QAAI,CAAC,KAAKzD,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAWiE,oBAAX,GAAkC,CAAvD,IAA4D,KAAKjE,KAAL,CAAW2E,gBAAX,GAA8B,CAA9F,EAAiG;AAC/F,aAAO,IAAP;AACD;;AAHoB,QAKdvC,MALc,GAKJrC,IALI,CAKdqC,MALc;;;AAOrB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJiB,cAAQ,CAHJ;AAIJT,aAAO,CAJH;AAKJxB,cAAQ,KAAKkC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML,eAAe,EAArB;;AAGA,QAAMyC,UAAU,KAAK9E,KAAL,CAAW+E,QAAX,GAAsB,CAAtB,GAA0B,KAAK/E,KAAL,CAAW+E,QAAX,GAAsB,KAAK/E,KAAL,CAAW2E,gBAA3D,GAA8E,CAA9F;AACA,QAAMK,QAAQF,UAAUA,UAAU,KAAK9E,KAAL,CAAW2E,gBAArB,GAAwC,CAAlD,GAAsD,IAApE;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKM,kBAAf;AACK,mBAAW,0BAAG,kBAAH,CADhB;AAEK,eAAOxB,KAFZ;AAGK,aAAI,uBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAO8C,qBAAV,CAAhB;AACK,iBAAO7C,YADZ;AAEK,eAAI,+BAFT;AAGG,aAAKkC,eAAL,CAAqB,kBAArB,EAAyCO,OAAzC,EAAkDE,KAAlD,EAAyD,CAAzD,EAA4D,KAAKhF,KAAL,CAAWiE,oBAAX,GAAkC,CAA9F,EAAiG,KAAK3D,KAAL,CAAWoC,KAAX,CAAiByC,cAAlH,EAAkI,KAAK7E,KAAL,CAAWoC,KAAX,CAAiB0C,iBAAnJ;AAHH;AAJF,KADF;AAYD,G;;iBAEDpB,kB,iCAAqB;AACnB,QAAI,CAAC,KAAK1D,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAWiE,oBAAX,GAAkC,CAA3D,EAA8D;AAC5D,aAAO,IAAP;AACD;;AAHkB,QAKZ7B,MALY,GAKFrC,IALE,CAKZqC,MALY;;;AAOnB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJO,WAAK,KAAKE,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C,CAHD;AAIJyB,aAAO,CAJH;AAKJS,cAAQ,KAAKC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML;AACJE,gBAAU,UADN;AAEJC,aAAO,KAAKxC,KAAL,CAAWqF,oBAFd;AAGJ1C,cAAQ,KAAK3C,KAAL,CAAWsF,kBAAX,GAAgC,KAAKtF,KAAL,CAAW+E;AAH/C,OAID3C,OAAOmD,cAJN,CAAN;;AAOA,QAAMT,UAAU,KAAKxE,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0B,CAA1B,EAA6B,CAA7B,CAAnC,GAAqE,IAArF;AACA,QAAMR,QAAQ,KAAK1E,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0B,KAAKlF,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0BC,MAA1B,GAAmC,CAA7D,EAAgE,CAAhE,CAAnC,GAAwG,IAAtH;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKC,gBAAf;AACK,mBAAW,0BAAG,gBAAH,CADhB;AAEK,eAAOjC,KAFZ;AAGK,aAAI,qBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAOuD,mBAAV,CAAhB;AACK,iBAAOtD,YADZ;AAEK,eAAI,6BAFT;AAGG,aAAKkC,eAAL,CAAqB,gBAArB,EAAuCO,OAAvC,EAAgDE,KAAhD,EAAuD,CAAvD,EAA0D,KAAKhF,KAAL,CAAWiE,oBAAX,GAAkC,CAA5F,EAA+F,KAAK3D,KAAL,CAAWoC,KAAX,CAAiB8C,QAAhH,EAA0H,KAAKlF,KAAL,CAAWoC,KAAX,CAAiBkD,WAA3I;AAHH;AAJF,KADF;AAYD,G;;iBAEDvC,e,8BAAkB;AAChB,QAAI,CAAC,KAAK/C,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAW6F,qBAAX,GAAmC,CAA5D,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAHe,QAKTzD,MALS,GAKCrC,IALD,CAKTqC,MALS;;;AAOhB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJS,aAAO,CAFH;AAGJ3B,aAAO,KAAKsD;AAHR,MAAN;;AAMA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKC,aAAf;AACK,mBAAW,0BAAG,YAAH,CADhB;AAEK,eAAOtC,KAFZ;AAGK,aAAI,iBAHT;AAIG,WAAKuC,qBAAL,EAJH;AAKG,WAAKC,qBAAL,EALH;AAMG,WAAKC,mBAAL;AANH,KADF;AAUD,G;;iBAEDF,qB,oCAAwB;AACtB,QAAI,CAAC,KAAK1F,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAW6F,qBAAX,GAAmC,CAA5D,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAHqB,QAKfzD,MALe,GAKLrC,IALK,CAKfqC,MALe;;;AAOtB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJO,WAAK,CAHD;AAIJC,aAAO,CAJH;AAKJxB,cAAQ,KAAKyB,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML,eAAe,EAArB;;AAGA,QAAM8D,aAAa,KAAKnG,KAAL,CAAWoG,WAAX,GAAyB,CAAzB,GAA6B,KAAKpG,KAAL,CAAWoG,WAAX,GAAyB,KAAKpG,KAAL,CAAW6F,qBAAjE,GAAyF,CAA5G;AACA,QAAMQ,WAAWF,aAAaA,aAAa,KAAKnG,KAAL,CAAW6F,qBAAxB,GAAgD,CAA7D,GAAiE,IAAlF;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKS,mBAAf;AACK,mBAAW,0BAAG,mBAAH,CADhB;AAEK,eAAO7C,KAFZ;AAGK,aAAI,wBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAOmE,sBAAV,CAAhB;AACK,iBAAOlE,YADZ;AAEK,eAAI,gCAFT;AAGG,aAAKkC,eAAL,CAAqB,mBAArB,EAA0C,CAA1C,EAA6C,KAAKvE,KAAL,CAAWwE,gBAAX,GAA8B,CAA3E,EAA8E2B,UAA9E,EAA0FE,QAA1F,EAAoG,KAAK/F,KAAL,CAAWoC,KAAX,CAAiB8D,YAArH,EAAmI,KAAKlG,KAAL,CAAWoC,KAAX,CAAiB+D,eAApJ;AAHH;AAJF,KADF;AAYD,G;;iBAEDR,qB,oCAAwB;AACtB,QAAI,CAAC,KAAK3F,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAW6F,qBAAX,GAAmC,CAAxD,IAA6D,KAAK7F,KAAL,CAAW2E,gBAAX,GAA8B,CAA/F,EAAkG;AAChG,aAAO,IAAP;AACD;;AAHqB,QAKfvC,MALe,GAKLrC,IALK,CAKfqC,MALe;;;AAOtB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJiB,cAAQ,CAHJ;AAIJT,aAAO,CAJH;AAKJxB,cAAQ,KAAKkC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML,eAAe,EAArB;;AAGA,QAAMyC,UAAU,KAAK9E,KAAL,CAAW+E,QAAX,GAAsB,CAAtB,GAA0B,KAAK/E,KAAL,CAAW+E,QAAX,GAAsB,KAAK/E,KAAL,CAAW2E,gBAA3D,GAA8E,CAA9F;AACA,QAAMK,QAAQF,UAAUA,UAAU,KAAK9E,KAAL,CAAW2E,gBAArB,GAAwC,CAAlD,GAAsD,IAApE;;AAEA,QAAMwB,aAAa,KAAKnG,KAAL,CAAWoG,WAAX,GAAyB,CAAzB,GAA6B,KAAKpG,KAAL,CAAWoG,WAAX,GAAyB,KAAKpG,KAAL,CAAW6F,qBAAjE,GAAyF,CAA5G;AACA,QAAMQ,WAAWF,aAAaA,aAAa,KAAKnG,KAAL,CAAW6F,qBAAxB,GAAgD,CAA7D,GAAiE,IAAlF;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKa,mBAAf;AACK,mBAAW,0BAAG,mBAAH,CADhB;AAEK,eAAOjD,KAFZ;AAGK,aAAI,wBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAOuE,sBAAV,CAAhB;AACK,iBAAOtE,YADZ;AAEK,eAAI,gCAFT;AAGG,aAAKkC,eAAL,CAAqB,mBAArB,EAA0CO,OAA1C,EAAmDE,KAAnD,EAA0DmB,UAA1D,EAAsEE,QAAtE,EAAgF,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBkE,eAAjG,EAAkH,KAAKtG,KAAL,CAAWoC,KAAX,CAAiBmE,kBAAnI;AAHH;AAJF,KADF;AAYD,G;;iBAEDX,mB,kCAAsB;AACpB,QAAI,CAAC,KAAK5F,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAW6F,qBAAX,GAAmC,CAA5D,EAA+D;AAC7D,aAAO,IAAP;AACD;;AAHmB,QAKbzD,MALa,GAKHrC,IALG,CAKbqC,MALa;;;AAOpB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJO,WAAK,KAAKE,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C,CAHD;AAIJyB,aAAO,CAJH;AAKJS,cAAQ,KAAKC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML;AACJE,gBAAU,UADN;AAEJC,aAAO,KAAKxC,KAAL,CAAWqF,oBAFd;AAGJ1C,cAAQ,KAAK3C,KAAL,CAAWsF,kBAAX,GAAgC,KAAKtF,KAAL,CAAW+E,QAH/C;AAIJb,WAAK,CAAC,KAAKE,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C,CAJF;AAKJkC,cAAQ,CAAC,KAAKC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C;AALL,OAMDN,OAAOmD,cANN,CAAN;;AASA,QAAMY,aAAa,KAAKnG,KAAL,CAAWoG,WAAX,GAAyB,CAAzB,GAA6B,KAAKpG,KAAL,CAAWoG,WAAX,GAAyB,KAAKpG,KAAL,CAAW6F,qBAAjE,GAAyF,CAA5G;AACA,QAAMQ,WAAWF,aAAaA,aAAa,KAAKnG,KAAL,CAAW6F,qBAAxB,GAAgD,CAA7D,GAAiE,IAAlF;;AAEA,QAAMf,UAAU,KAAKxE,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0B,CAA1B,EAA6B,CAA7B,CAAnC,GAAqE,IAArF;AACA,QAAMR,QAAQ,KAAK1E,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0BC,MAA1B,GAAmC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0B,KAAKlF,KAAL,CAAWoC,KAAX,CAAiB8C,QAAjB,CAA0BC,MAA1B,GAAmC,CAA7D,EAAgE,CAAhE,CAAnC,GAAwG,IAAtH;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKqB,iBAAf;AACK,mBAAW,0BAAG,iBAAH,CADhB;AAEK,eAAOrD,KAFZ;AAGK,aAAI,sBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAO2E,oBAAV,CAAhB;AACK,iBAAO1E,YADZ;AAEK,eAAI,8BAFT;AAGG,aAAKkC,eAAL,CAAqB,iBAArB,EAAwCO,OAAxC,EAAiDE,KAAjD,EAAwDmB,UAAxD,EAAoEE,QAApE,EAA8E,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBsE,SAA/F,EAA0G,KAAK1G,KAAL,CAAWoC,KAAX,CAAiBuE,YAA3H;AAHH;AAJF,KADF;AAYD,G;;iBAED3D,gB,+BAAmB;AAAA,QACVlB,MADU,GACArC,IADA,CACVqC,MADU;;;AAGjB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,KAAKC,qBAFP;AAGJO,aAAO,KAAK2B;AAHR,MAAN;;AAMA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKoB,cAAf;AACK,mBAAW,0BAAG,aAAH,CADhB;AAEK,eAAOzD,KAFZ;AAGK,aAAI,kBAHT;AAIG,WAAK0D,sBAAL,EAJH;AAKG,WAAKC,sBAAL,EALH;AAMG,WAAKC,oBAAL;AANH,KADF;AAUD,G;;iBAEDF,sB,qCAAyB;AACvB,QAAI,CAAC,KAAK7G,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAWwE,gBAAX,GAA8B,CAAvD,EAA0D;AACxD,aAAO,IAAP;AACD;;AAHsB,QAKhBpC,MALgB,GAKNrC,IALM,CAKhBqC,MALgB;;;AAOvB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJO,WAAK,CAHD;AAIJC,aAAO,CAJH;AAKJxB,cAAQ,KAAKyB,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C,CALJ;AAMJ4E,gBAAU,SANN,CAMgB;AANhB,MAAN;;AASA,QAAMjF;AACJE,gBAAU,UADN;AAEJC,aAAO,KAAKxC,KAAL,CAAWqF,oBAAX,GAAkC,KAAKrF,KAAL,CAAWoG,WAFhD;AAGJzD,cAAQ,KAAK3C,KAAL,CAAWsF,kBAHf;AAIJ3B,YAAM,CAAC,KAAKC;AAJR,OAKDxB,OAAOmD,cALN,CAAN;;AAQA,QAAMY,aAAa,KAAK7F,KAAL,CAAWoC,KAAX,CAAiB6E,UAAjB,CAA4B9B,MAA5B,GAAqC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiB6E,UAAjB,CAA4B,CAA5B,EAA+B,CAA/B,CAArC,GAAyE,IAA5F;AACA,QAAMlB,WAAW,KAAK/F,KAAL,CAAWoC,KAAX,CAAiB6E,UAAjB,CAA4B9B,MAA5B,GAAqC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiB6E,UAAjB,CAA4B,KAAKjH,KAAL,CAAWoC,KAAX,CAAiB6E,UAAjB,CAA4B9B,MAA5B,GAAqC,CAAjE,EAAoE,CAApE,CAArC,GAA8G,IAA/H;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAK+B,oBAAf;AACK,mBAAW,0BAAG,oBAAH,CADhB;AAEK,eAAO/D,KAFZ;AAGK,aAAI,yBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAOqF,uBAAV,CAAhB;AACK,iBAAOpF,YADZ;AAEK,eAAI,iCAFT;AAGG,aAAKkC,eAAL,CAAqB,oBAArB,EAA2C,CAA3C,EAA8C,KAAKvE,KAAL,CAAWwE,gBAAX,GAA8B,CAA5E,EAA+E2B,UAA/E,EAA2FE,QAA3F,EAAqG,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBgF,OAAtH,EAA+H,KAAKpH,KAAL,CAAWoC,KAAX,CAAiB6E,UAAhJ;AAHH;AAJF,KADF;AAYD,G;;iBAEDH,sB,qCAAyB;AACvB,QAAI,CAAC,KAAK9G,KAAL,CAAWoC,KAAZ,IAAqB,KAAK1C,KAAL,CAAW2E,gBAAX,GAA8B,CAAvD,EAA0D;AACxD,aAAO,IAAP;AACD;;AAHsB,QAKhBvC,MALgB,GAKNrC,IALM,CAKhBqC,MALgB;;;AAOvB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJiB,cAAQ,CAHJ;AAIJT,aAAO,CAJH;AAKJxB,cAAQ,KAAKkC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C,CALJ;AAMJ4E,gBAAU,SANN,CAMgB;AANhB,MAAN;;AASA,QAAMjF;AACJE,gBAAU,UADN;AAEJC,aAAO,KAAKxC,KAAL,CAAWqF,oBAAX,GAAkC,KAAKrF,KAAL,CAAWoG,WAFhD;AAGJzD,cAAQ,KAAK3C,KAAL,CAAWsF,kBAHf;AAIJ3B,YAAM,CAAC,KAAKC;AAJR,OAKDxB,OAAOmD,cALN,CAAN;;AAQA,QAAMY,aAAa,KAAK7F,KAAL,CAAWoC,KAAX,CAAiBiF,aAAjB,CAA+BlC,MAA/B,GAAwC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiBiF,aAAjB,CAA+B,CAA/B,EAAkC,CAAlC,CAAxC,GAA+E,IAAlG;AACA,QAAMtB,WAAW,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBiF,aAAjB,CAA+BlC,MAA/B,GAAwC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiBiF,aAAjB,CAA+B,KAAKrH,KAAL,CAAWoC,KAAX,CAAiBiF,aAAjB,CAA+BlC,MAA/B,GAAwC,CAAvE,EAA0E,CAA1E,CAAxC,GAAuH,IAAxI;;AAEA,QAAMX,UAAU,KAAK9E,KAAL,CAAW+E,QAAX,GAAsB,CAAtB,GAA0B,KAAK/E,KAAL,CAAW+E,QAAX,GAAsB,KAAK/E,KAAL,CAAW2E,gBAA3D,GAA8E,CAA9F;AACA,QAAMK,QAAQF,UAAUA,UAAU,KAAK9E,KAAL,CAAW2E,gBAArB,GAAwC,CAAlD,GAAsD,IAApE;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKiD,oBAAf;AACK,mBAAW,0BAAG,oBAAH,CADhB;AAEK,eAAOnE,KAFZ;AAGK,aAAI,yBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAOqF,uBAAV,CAAhB;AACK,iBAAOpF,YADZ;AAEK,eAAI,iCAFT;AAGG,aAAKkC,eAAL,CAAqB,oBAArB,EAA2CO,OAA3C,EAAoDE,KAApD,EAA2DmB,UAA3D,EAAuEE,QAAvE,EAAiF,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBmF,UAAlG,EAA8G,KAAKvH,KAAL,CAAWoC,KAAX,CAAiBiF,aAA/H;AAHH;AAJF,KADF;AAYD,G;;iBAEDN,oB,mCAAuB;AACrB,QAAI,CAAC,KAAK/G,KAAL,CAAWoC,KAAhB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAHoB,QAKdN,MALc,GAKJrC,IALI,CAKdqC,MALc;;;AAOrB,QAAMqB,qBACDrB,OAAOsB,IADN;AAEJC,YAAM,CAFF;AAGJO,WAAK,KAAKE,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C,CAHD;AAIJyB,aAAO,CAJH;AAKJS,cAAQ,KAAKC,2BAAL,CAAiC,KAAKvE,KAAL,CAAWoC,KAA5C;AALJ,MAAN;;AAQA,QAAML;AACJE,gBAAU,UADN;AAEJC,aAAO,KAAKxC,KAAL,CAAWqF,oBAAX,GAAkC,KAAKrF,KAAL,CAAWoG,WAFhD;AAGJzD,cAAQ,KAAK3C,KAAL,CAAWsF,kBAAX,GAAgC,KAAKtF,KAAL,CAAW+E,QAH/C;AAIJpB,YAAM,CAAC,KAAKC,qBAJR;AAKJM,WAAK,CAAC,KAAKE,2BAAL,CAAiC,KAAK9D,KAAL,CAAWoC,KAA5C;AALF,OAMDN,OAAOmD,cANN,CAAN;;AASA,QAAMT,UAAU,KAAKxE,KAAL,CAAWoC,KAAX,CAAiBoF,IAAjB,CAAsBrC,MAAtB,GAA+B,KAAKnF,KAAL,CAAWoC,KAAX,CAAiBoF,IAAjB,CAAsB,CAAtB,EAAyB,CAAzB,CAA/B,GAA6D,IAA7E;AACA,QAAM9C,QAAQ,KAAK1E,KAAL,CAAWoC,KAAX,CAAiBoF,IAAjB,CAAsBrC,MAAtB,GAA+B,KAAKnF,KAAL,CAAWoC,KAAX,CAAiBoF,IAAjB,CAAsB,KAAKxH,KAAL,CAAWoC,KAAX,CAAiBoF,IAAjB,CAAsBrC,MAAtB,GAA+B,CAArD,EAAwD,CAAxD,CAA/B,GAA4F,IAA1G;;AAEA,QAAMU,aAAa,KAAK7F,KAAL,CAAWoC,KAAX,CAAiBqF,OAAjB,CAAyBtC,MAAzB,GAAkC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiBqF,OAAjB,CAAyB,CAAzB,EAA4B,CAA5B,CAAlC,GAAmE,IAAtF;AACA,QAAM1B,WAAW,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBqF,OAAjB,CAAyBtC,MAAzB,GAAkC,KAAKnF,KAAL,CAAWoC,KAAX,CAAiBqF,OAAjB,CAAyB,KAAKzH,KAAL,CAAWoC,KAAX,CAAiBqF,OAAjB,CAAyBtC,MAAzB,GAAkC,CAA3D,EAA8D,CAA9D,CAAlC,GAAqG,IAAtH;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,KAAKuC,kBAAf;AACK,mBAAW,0BAAG,kBAAH,CADhB;AAEK,eAAOvE,KAFZ;AAGK,aAAI,uBAHT;AAIE;AAAA;AAAA,UAAK,WAAW,0BAAGrB,OAAO6F,qBAAV,CAAhB;AACK,iBAAO5F,YADZ;AAEK,eAAI,+BAFT;AAGG,aAAKkC,eAAL,CAAqB,kBAArB,EAAyCO,OAAzC,EAAkDE,KAAlD,EAAyDmB,UAAzD,EAAqEE,QAArE,EAA+E,KAAK/F,KAAL,CAAWoC,KAAX,CAAiBoF,IAAhG,EAAsG,KAAKxH,KAAL,CAAWoC,KAAX,CAAiBqF,OAAvH;AAHH;AAJF,KADF;AAYD,G;;iBAEDxE,uB,sCAA0B;AAAA;;AACxB,QAAI,KAAK2E,eAAL,IAAwB,IAA5B,EAAkC;AAChC,aAAO,IAAP;AACD;;AAHuB,QAKjB9F,MALiB,GAKPrC,IALO,CAKjBqC,MALiB;;;AAOxB,QAAM+F,SAAS,KAAK7H,KAAL,CAAWoC,KAAX,CAAiBqF,OAAjB,CAAyBK,IAAzB,CAA8B,UAACC,IAAD,EAAU;AACrD,aAAOA,KAAK,CAAL,MAAY,OAAKH,eAAxB;AACD,KAFc,CAAf;;AAIA,QAAMI,0BACDlG,OAAOmG,iBADN;AAEJ5E,YAAMwE,OAAO,CAAP,IAAYA,OAAO,CAAP,CAFd;AAGJjE,WAAK,KAAKsE,eAAL,CAAqBC,SAArB,GAAiC;AAHlC,MAAN;;AAMA,WACE,uCAAK,OAAOH,UAAZ;AACK,WAAI,0BADT,GADF;AAID,G;;iBAED9E,oB,mCAAuB;AAAA;;AACrB,QAAI,KAAKkF,YAAL,IAAqB,IAAzB,EAA+B;AAC7B,aAAO,IAAP;AACD;;AAHoB,QAKdtG,MALc,GAKJrC,IALI,CAKdqC,MALc;;;AAOrB,QAAMuG,MAAM,KAAKrI,KAAL,CAAWoC,KAAX,CAAiBoF,IAAjB,CAAsBM,IAAtB,CAA2B,UAACC,IAAD,EAAU;AAC/C,aAAOA,KAAK,CAAL,MAAY,OAAKK,YAAxB;AACD,KAFW,CAAZ;;AAIA,QAAMJ,0BACDlG,OAAOwG,cADN;AAEJ1E,WAAKyE,IAAI,CAAJ,IAASA,IAAI,CAAJ,CAAT,GAAkB,CAFnB;AAGJhF,YAAM,KAAKkF,SAAL,CAAeC;AAHjB,MAAN;;AAMA,WACE,uCAAK,OAAOR,UAAZ;AACK,WAAI,uBADT,GADF;AAID,G;;iBAMD7F,wB,2CAA8DC,K,EAAO;AAAA,QAA3C2C,oBAA2C,QAA3CA,oBAA2C;AAAA,QAArBe,WAAqB,QAArBA,WAAqB;;AACnE,QAAI,CAAC1D,KAAD,IAAU,CAACA,MAAMqF,OAAN,CAActC,MAA7B,EAAqC;AACnC,aAAOJ,uBAAuBe,WAA9B;AACD;;AAED,QAAM2C,aAAarG,MAAMqF,OAAN,CAAcrF,MAAMqF,OAAN,CAActC,MAAd,GAAuB,CAArC,CAAnB;AACA,QAAMjD,QAAQuG,WAAW,CAAX,IAAgBA,WAAW,CAAX,CAA9B;;AAEA,WAAOvG,QAAS,CAAE4D,cAAc,CAAf,GAAoB2C,WAAW,CAAX,CAArB,IAAsC1D,oBAAtD;AACD,G;;iBAEDzC,yB,6CAA0DF,K,EAAO;AAAA,QAAtC4C,kBAAsC,SAAtCA,kBAAsC;AAAA,QAAlBP,QAAkB,SAAlBA,QAAkB;;AAC/D,QAAI,CAACrC,KAAD,IAAU,CAACA,MAAMoF,IAAN,CAAWrC,MAA1B,EAAkC;AAChC,aAAOH,qBAAqBP,QAA5B;AACD;;AAED,QAAMiE,UAAUtG,MAAMoF,IAAN,CAAWpF,MAAMoF,IAAN,CAAWrC,MAAX,GAAoB,CAA/B,CAAhB;AACA,QAAM9C,SAASqG,QAAQ,CAAR,IAAaA,QAAQ,CAAR,CAA5B;;AAEA,WAAOrG,SAAU,CAAEoC,WAAW,CAAZ,GAAiBiE,QAAQ,CAAR,CAAlB,IAAgC1D,kBAAjD;AACD,G;;iBAEDlB,2B,wCAA4B1B,K,EAAO;AACjC,QAAI,CAACA,KAAD,IAAU,CAACA,MAAM+B,WAAN,CAAkBgB,MAAjC,EAAyC;AACvC,aAAO,CAAP;AACD;;AAED,QAAMwD,iBAAiBvG,MAAM+B,WAAN,CAAkB/B,MAAM+B,WAAN,CAAkBgB,MAAlB,GAA2B,CAA7C,CAAvB;AACA,QAAMyD,YAAYD,eAAe,CAAf,IAAoBA,eAAe,CAAf,CAAtC;;AAEA,WAAOC,SAAP;AACD,G;;iBAEDrE,2B,wCAA4BnC,K,EAAO;AACjC,QAAI,CAACA,KAAD,IAAU,CAACA,MAAMyC,cAAN,CAAqBM,MAApC,EAA4C;AAC1C,aAAO,CAAP;AACD;;AAED,QAAM0D,gBAAgBzG,MAAMyC,cAAN,CAAqBzC,MAAMyC,cAAN,CAAqBM,MAArB,GAA8B,CAAnD,CAAtB;AACA,QAAM2D,mBAAmBD,cAAc,CAAd,IAAmBA,cAAc,CAAd,CAA5C;;AAEA,WAAOC,gBAAP;AACD,G;;iBA0JDC,e,8BAAkB;AAChB,SAAKC,UAAL,CAAgBC,UAAhB;AACD,G;;iBAMD5I,M,mBAAO6I,S,EAAWC,U,EAAYC,K,EAAO1J,K,EAAO;AAAA;;AAC1C,QAAI,CAAC,KAAKS,KAAV,EAAiB;AACf;AACD;;AAEDT,YAAQA,SAAS,KAAKA,KAAtB;;AAEA,QAAM2J,IAAIF,aAAazJ,MAAM4J,cAA7B;AACA,QAAMC,IAAIL,YAAYxJ,MAAM8J,cAA5B;;AAEA,QAAMC,SAAS;AACbpG,YAAMqG,KAAKC,GAAL,CAAS,CAAT,EAAYN,CAAZ,CADO;AAEbzF,WAAK8F,KAAKC,GAAL,CAAS,CAAT,EAAYJ,CAAZ,CAFQ;AAGbrH,aAAO,KAAK/B,KAAL,CAAWyJ,WAAX,GAA0B,IAAIlK,MAAM4J,cAApC,IAAuDD,IAAI,CAAJ,GAAQA,CAAR,GAAY,CAAnE,CAHM;AAIbhH,cAAQ,KAAKlC,KAAL,CAAW0J,YAAX,GAA2B,IAAInK,MAAM8J,cAArC,IAAwDD,IAAI,CAAJ,GAAQA,CAAR,GAAY,CAApE;AAJK,KAAf;;AAOA,QAAMnH,QAAQ,KAAK4G,UAAL,CAAgBc,iBAAhB,CAAkCL,MAAlC,EAA0C/J,MAAM+E,QAAhD,EAA0D/E,MAAMoG,WAAhE,CAAd;;AAEA,QAAI1D,MAAM2H,OAAN,IAAiBX,KAArB,EAA4B;AAC1B,UAAM5E,UAAUpC,MAAMoF,IAAN,CAAWrC,MAAX,GAAoB/C,MAAMoF,IAAN,CAAW,CAAX,EAAc,CAAd,CAApB,GAAuC,IAAvD;AACA,UAAM9C,QAAQtC,MAAMoF,IAAN,CAAWrC,MAAX,GAAoB/C,MAAMoF,IAAN,CAAWpF,MAAMoF,IAAN,CAAWrC,MAAX,GAAoB,CAA/B,EAAkC,CAAlC,CAApB,GAA2D,IAAzE;AACA,UAAMU,aAAazD,MAAMqF,OAAN,CAActC,MAAd,GAAuB/C,MAAMqF,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAvB,GAA6C,IAAhE;AACA,UAAM1B,WAAW3D,MAAMqF,OAAN,CAActC,MAAd,GAAuB/C,MAAMqF,OAAN,CAAcrF,MAAMqF,OAAN,CAActC,MAAd,GAAuB,CAArC,EAAwC,CAAxC,CAAvB,GAAoE,IAArF;;AAEA,UAAIzF,MAAMsK,eAAV,EAA2B;AACzBtK,cAAMsK,eAAN,CAAsBxF,OAAtB,EAA+BE,KAA/B,EAAsCmB,UAAtC,EAAkDE,QAAlD;AACD;;AAED,WAAKkE,QAAL,CAAc,EAAC7H,OAAOA,KAAR,EAAd;AACD;;AAED,QAAIA,KAAJ,EAAW;AACT,WAAK8H,SAAL,CAAef,UAAf,EAA2BD,SAA3B,EAAsC9G,KAAtC;AACD;;AAED,QAAM+H,kBAAkB,KAAKhI,wBAAL,CAA8BzC,KAA9B,EAAqC0C,KAArC,CAAxB;AACA,QAAMgI,mBAAmB,KAAK9H,yBAAL,CAA+B5C,KAA/B,EAAsC0C,KAAtC,CAAzB;;AAEA;AACA,QAAIgH,SAAS,KAAKiB,oBAAL,KAA8BF,eAAvC,IAA0D,KAAKG,qBAAL,KAA+BF,gBAA7F,EAA+G;AAC7G,WAAKC,oBAAL,GAA4BF,eAA5B;AACA,WAAKG,qBAAL,GAA6BF,gBAA7B;;AAEA;AACA;AACA;AACA;AACA,UAAMG,QAAQb,KAAKC,GAAL,CAAS,CAAT,EAAaT,YAAY,KAAK/I,KAAL,CAAW0J,YAAxB,GAAwCH,KAAKC,GAAL,CAAS,KAAKxJ,KAAL,CAAW0J,YAApB,EAAkCO,gBAAlC,CAApD,CAAd;AACA,UAAMI,QAAQd,KAAKC,GAAL,CAAS,CAAT,EAAaR,aAAa,KAAKhJ,KAAL,CAAWyJ,WAAzB,GAAwCF,KAAKC,GAAL,CAAS,KAAKxJ,KAAL,CAAWyJ,WAApB,EAAiCO,eAAjC,CAApD,CAAd;;AAEAM,iBAAW,YAAM;AACf,YAAIF,QAAQ,CAAR,IAAaC,QAAQ,CAAzB,EAA4B;AAC1B,cAAME,oBAAoBvB,aAAaqB,KAAvC;AACA,cAAMG,mBAAmBzB,YAAYqB,KAArC;;AAEA,iBAAKvJ,SAAL,CAAe4J,QAAf,CAAwB,CAACF,iBAAzB,EAA4C,CAACC,gBAA7C;AACA,iBAAKtK,MAAL,CAAYsK,gBAAZ,EAA8BD,iBAA9B;AACD;;AAED,eAAK1J,SAAL,CAAeQ,OAAf;AACD,OAVD,EAUG,CAVH;AAWD;AACF,G;;iBAED0I,S,sBAAUb,C,EAAGE,C,EAAGnH,K,EAAO;AACrB,QAAMyI,qBAAqB,KAAK/G,2BAAL,CAAiC1B,KAAjC,CAA3B;;AAEA,QAAI,KAAK0I,aAAT,EAAwB;AACtB,WAAKA,aAAL,CAAmBC,UAAnB,CAA8B,CAA9B,EAAiCC,KAAjC,CAAuCpH,GAAvC,GAA8C,CAAC2F,CAAD,GAAKsB,kBAAN,GAA4B,IAAzE;AACD;;AAED,QAAI,KAAKI,cAAT,EAAyB;AACvB,WAAKA,cAAL,CAAoBF,UAApB,CAA+B,CAA/B,EAAkCC,KAAlC,CAAwCpH,GAAxC,GAA+C,CAAC2F,CAAD,GAAKsB,kBAAN,GAA4B,IAA1E;AACD;;AAED,QAAI,KAAKK,iBAAT,EAA4B;AAC1B,WAAKA,iBAAL,CAAuBH,UAAvB,CAAkC,CAAlC,EAAqCC,KAArC,CAA2C3H,IAA3C,GAAmD,CAACgG,CAAD,GAAK,KAAK/F,qBAAX,GAAoC,IAAtF;AACD;;AAED,QAAI,KAAK6H,iBAAT,EAA4B;AAC1B,WAAKA,iBAAL,CAAuBJ,UAAvB,CAAkC,CAAlC,EAAqCC,KAArC,CAA2C3H,IAA3C,GAAmD,CAACgG,CAAD,GAAK,KAAK/F,qBAAX,GAAoC,IAAtF;AACD;;AAED,QAAI,KAAK4E,eAAT,EAA0B;AACxB,WAAKA,eAAL,CAAqB6C,UAArB,CAAgC,CAAhC,EAAmCC,KAAnC,CAAyCpH,GAAzC,GAAgD,CAAC2F,CAAD,GAAKsB,kBAAN,GAA4B,IAA3E;AACA,WAAK3C,eAAL,CAAqB6C,UAArB,CAAgC,CAAhC,EAAmCC,KAAnC,CAAyC3H,IAAzC,GAAiD,CAACgG,CAAD,GAAK,KAAK/F,qBAAX,GAAoC,IAApF;AACD;;AAED,QAAI,KAAKiF,SAAT,EAAoB;AAClB,WAAKA,SAAL,CAAeyC,KAAf,CAAqB3H,IAArB,GAA4BgG,IAAI,IAAhC;AACA,WAAKd,SAAL,CAAeyC,KAAf,CAAqBpH,GAArB,GAA2B2F,IAAI,IAA/B;AACA,WAAKhB,SAAL,CAAeyC,KAAf,CAAqB3I,MAArB,GAA8B,KAAK+I,cAAL,CAAoBC,YAApB,GAAmC,IAAjE;AACD;;AAED,QAAI,KAAKC,UAAT,EAAqB;AACnB,WAAKA,UAAL,CAAgBN,KAAhB,CAAsB3H,IAAtB,GAA8BgG,IAAI,KAAK+B,cAAL,CAAoB5C,WAAxB,GAAsC,KAAKhD,sBAA5C,GAAsE,IAAnG;AACA,WAAK8F,UAAL,CAAgBN,KAAhB,CAAsBpH,GAAtB,GAA4B2F,IAAI,IAAhC;AACA,WAAK+B,UAAL,CAAgBN,KAAhB,CAAsB3I,MAAtB,GAA+B,KAAK+I,cAAL,CAAoBC,YAApB,GAAmC,IAAlE;AACD;;AAED,QAAI,KAAKE,WAAT,EAAsB;AACpB,WAAKA,WAAL,CAAiBP,KAAjB,CAAuB3H,IAAvB,GAA+BgG,IAAI,KAAK/F,qBAAV,GAAmC,IAAjE;AACA,WAAKiI,WAAL,CAAiBP,KAAjB,CAAuBpH,GAAvB,GAA6B2F,IAAI,IAAjC;AACA,WAAKgC,WAAL,CAAiBP,KAAjB,CAAuB3I,MAAvB,GAAgC,KAAK+I,cAAL,CAAoBC,YAApB,GAAmC,IAAnE;AACA,WAAKE,WAAL,CAAiBP,KAAjB,CAAuB9I,KAAvB,GAAgC,KAAKkJ,cAAL,CAAoB5C,WAApB,GAAkC,KAAKhD,sBAAvC,GAAgE,KAAKlC,qBAAtE,GAA+F,IAA9H;AACD;;AAED,QAAI,KAAKrC,YAAT,EAAuB;AACrB,UAAI,KAAKA,YAAL,CAAkB8J,UAAlB,CAA6B,CAA7B,EAAgCM,YAAhC,GAA+C,KAAKpK,YAAL,CAAkBoK,YAArE,EAAmF;AACjF,aAAKpK,YAAL,CAAkB8J,UAAlB,CAA6B,CAA7B,EAAgCC,KAAhC,CAAsC3I,MAAtC,GAA+C,KAAKpB,YAAL,CAAkBoK,YAAlB,GAAiC,IAAhF;AACD;;AAED,UAAI,KAAKpK,YAAL,CAAkB8J,UAAlB,CAA6B,CAA7B,EAAgCvC,WAAhC,GAA8C,KAAKvH,YAAL,CAAkBuH,WAApE,EAAiF;AAC/E,aAAKvH,YAAL,CAAkB8J,UAAlB,CAA6B,CAA7B,EAAgCC,KAAhC,CAAsC9I,KAAtC,GAA8C,KAAKjB,YAAL,CAAkBuH,WAAlB,GAAgC,IAA9E;AACD;AACF;AACF,G;;iBAkCDgD,iB,gCAAoB;AAClB,SAAK5L,mBAAL,GAA2B,EAA3B;AACD,G;;iBAED6L,gB,6BAAiBC,W,EAAa;AAC5B,WAAO,KAAK9L,mBAAL,CAAyB8L,WAAzB,CAAP;AACD,G;;iBAEDC,kB,iCAAqB;AACnB,SAAK9L,iBAAL,GAAyB,EAAzB;AACD,G;;iBAED+L,iB,8BAAkBC,Q,EAAU;AAC1B,WAAO,KAAKhM,iBAAL,CAAuBgM,QAAvB,CAAP;AACD,G;;iBAsBDC,W,wBAAY1J,K,EAAO;AACjB,WAAOA,KAAP;AACD,G;;iBAED2J,U,uBAAWvE,I,EAAM;AACf,WAAOA,IAAP;AACD,G;;iBAEDvD,e,4BAAgBb,I,EAAMoB,O,EAASE,K,EAAOmB,U,EAAYE,Q,EAAUyB,I,EAAMC,O,EAAS;AACzE,QAAMuE,WAAW,EAAjB;;AAEA,QAAMC,aAAa,KAAKvM,KAAL,CAAWuM,UAA9B;AACA,QAAMC,YAAY,KAAKxM,KAAL,CAAWwM,SAAX,IAAwB,KAAKA,SAA/C;AACA,QAAMH,aAAa,KAAKrM,KAAL,CAAWqM,UAAX,IAAyB,KAAKA,UAAjD;;AAEA,SAAK,IAAI1D,MAAM3D,KAAV,EAAiByH,kBAAkB,CAAxC,EAA2C9D,OAAO7D,OAAlD,EAA2D,EAAE6D,GAAF,EAAO,EAAE8D,eAApE,EAAqF;AACnF,UAAMC,WAAW,EAAjB;AACA,UAAMC,UAAU7E,KAAKa,MAAM7D,OAAX,CAAhB;AACA,UAAM8H,cAAc,EAApB;;AAEA,WAAK,IAAIzE,SAAS9B,QAAb,EAAuBwG,qBAAqB,CAAjD,EAAoD1E,UAAUhC,UAA9D,EAA0E,EAAEgC,MAAF,EAAU,EAAE0E,kBAAtF,EAA0G;AACxG,YAAMC,aAAa/E,QAAQI,SAAShC,UAAjB,CAAnB;;AAEAyG,oBAAYG,IAAZ,CAAiBD,UAAjB;;AAEAJ,iBAASK,IAAT,CAAcR,WAAW7I,IAAX,EAAiBiF,GAAjB,EAAsBgE,OAAtB,EAA+BxE,MAA/B,EAAuC2E,UAAvC,EAAmD,IAAnD,EAAyDL,eAAzD,EAA0EI,kBAA1E,CAAd;AACD;;AAEDP,eAASS,IAAT,CAAcP,UAAU9I,IAAV,EAAgBgJ,QAAhB,EAA0BC,OAA1B,EAAmCC,WAAnC,CAAd;AACD;;AAED,WAAOP,WAAWC,QAAX,CAAP;AACD,G;;;;wBA3aiB;AAChB,aAAO,KAAKrM,UAAZ;AACD;;;wBA8C4B;AAC3B,UAAI,CAAC,KAAKK,KAAL,CAAWoC,KAAZ,IAAqB,KAAKpC,KAAL,CAAWoC,KAAX,CAAiBuE,YAAjB,CAA8BxB,MAA9B,KAAyC,CAAlE,EAAqE;AACnE,eAAO,CAAP;AACD;;AAED,UAAMsD,aAAa,KAAKzI,KAAL,CAAWoC,KAAX,CAAiBuE,YAAjB,CAA8B,KAAK3G,KAAL,CAAWoC,KAAX,CAAiBuE,YAAjB,CAA8BxB,MAA9B,GAAuC,CAArE,CAAnB;AACA,UAAMuH,aAAajE,WAAW,CAAX,IAAgBA,WAAW,CAAX,CAAnC;;AAEA,aAAOiE,UAAP;AACD;;;wBAE2B;AAC1B,UAAI,CAAC,KAAK1M,KAAL,CAAWoC,KAAZ,IAAqB,CAAC,KAAKpC,KAAL,CAAWoC,KAAX,CAAiBkD,WAAjB,CAA6BH,MAAvD,EAA+D;AAC7D,eAAO,CAAP;AACD;;AAED,UAAMsD,aAAa,KAAKzI,KAAL,CAAWoC,KAAX,CAAiBkD,WAAjB,CAA6B,KAAKtF,KAAL,CAAWoC,KAAX,CAAiBkD,WAAjB,CAA6BH,MAA7B,GAAsC,CAAnE,CAAnB;AACA,UAAMuH,aAAajE,WAAW,CAAX,IAAgBA,WAAW,CAAX,CAAnC;;AAEA,aAAOiE,UAAP;AACD;;;wBAmQgB;AACf,UAAI,CAAC,KAAKC,WAAV,EAAuB;AACrB,aAAKA,WAAL,GAAmB,8BAAnB;AACA,aAAKA,WAAL,CAAiB5H,oBAAjB,GAAwC,KAAKrF,KAAL,CAAWqF,oBAAnD;AACA,aAAK4H,WAAL,CAAiB3H,kBAAjB,GAAsC,KAAKtF,KAAL,CAAWsF,kBAAjD;AACA,aAAK2H,WAAL,CAAiBhJ,oBAAjB,GAAwC,KAAKjE,KAAL,CAAWiE,oBAAnD;AACA,aAAKgJ,WAAL,CAAiBpH,qBAAjB,GAAyC,KAAK7F,KAAL,CAAW6F,qBAApD;AACA,aAAKoH,WAAL,CAAiBzI,gBAAjB,GAAoC,KAAKxE,KAAL,CAAWwE,gBAA/C;AACA,aAAKyI,WAAL,CAAiBtI,gBAAjB,GAAoC,KAAK3E,KAAL,CAAW2E,gBAA/C;AACA,aAAKsI,WAAL,CAAiBC,kBAAjB,GAAsC,KAAKA,kBAA3C;AACA,aAAKD,WAAL,CAAiBE,oBAAjB,GAAwC,KAAKA,oBAA7C;AACD;;AAED,aAAO,KAAKF,WAAZ;AACD;;;wBAwFe;AACd,aAAO,CAAC,KAAK3L,SAAL,CAAeuI,CAAvB;AACD;;;wBAEgB;AACf,aAAO,CAAC,KAAKvI,SAAL,CAAeqI,CAAvB;AACD;;;;EArhC+B,gBAAMyD,S;;AAAnBrN,I,CACZsN,S,GAAY;AACjBzD,kBAAgB,oBAAU0D,MADT;;AAGjBxD,kBAAgB,oBAAUwD,MAHT;;AAKjBhI,sBAAoB,oBAAUgI,MALb;;AAOjBjI,wBAAsB,oBAAUiI,MAPf;;AASjBlH,eAAa,oBAAUkH,MAAV,CAAiBC,UATb;;AAWjBxI,YAAU,oBAAUuI,MAAV,CAAiBC,UAXV;;AAajBtJ,wBAAsB,oBAAUqJ,MAbf;;AAejBzH,yBAAuB,oBAAUyH,MAfhB;;AAiBjB9I,oBAAkB,oBAAU8I,MAjBX;;AAmBjB3I,oBAAkB,oBAAU2I,MAnBX;;AAqBjBE,eAAa,oBAAUC,SAAV,CAAoB,CAAE,oBAAUH,MAAZ,EAAoB,oBAAUI,IAA9B,CAApB,CArBI;;AAuBjBC,aAAW,oBAAUF,SAAV,CAAoB,CAAE,oBAAUH,MAAZ,EAAoB,oBAAUI,IAA9B,CAApB,CAvBM;;AAyBjBlB,aAAW,oBAAUkB,IAzBJ;;AA2BjBrB,cAAY,oBAAUqB,IA3BL;;AA6BjBnB,cAAY,oBAAUmB,IA7BL;;AA+BjBtB,eAAa,oBAAUsB,IA/BN;;AAiCjBpD,mBAAiB,oBAAUoD,IAjCV;;AAmCjBE,iBAAe,oBAAUF,IAnCR;;AAqCjBG,YAAU,oBAAUH,IArCH;;AAuCjBI,eAAa,oBAAUJ,IAvCN;;AAyCjB9M,iBAAe,oBAAUmN;AAzCR,C;AADAhO,I,CA6CZiO,Y,GAAe;AACpBpE,kBAAgB,CADI;AAEpBE,kBAAgB,CAFI;AAGpB7F,wBAAsB,CAHF;AAIpB4B,yBAAuB,CAJH;AAKpBrB,oBAAkB,CALE;AAMpBG,oBAAkB,CANE;AAOpBU,wBAAsB,GAPF;AAQpBC,sBAAoB;AARA,C;;;;;OA2nBtBxC,Q,GAAW,UAACmL,IAAD,EAAU;AACnB,WAAKxN,KAAL,GAAawN,IAAb;AACD,G;;OAEDjL,iB,GAAoB,UAACiL,IAAD,EAAU;AAC5B,WAAKvC,cAAL,GAAsBuC,IAAtB;AACD,G;;OAED/K,e,GAAkB,UAAC+K,IAAD,EAAU;AAC1B,WAAK1M,YAAL,GAAoB0M,IAApB;AACD,G;;OAEDpK,Y,GAAe,UAACoK,IAAD,EAAU;AACvB,WAAKpF,SAAL,GAAiBoF,IAAjB;AACD,G;;OAED5J,kB,GAAqB,UAAC4J,IAAD,EAAU;AAC7B,WAAKC,eAAL,GAAuBD,IAAvB;AACD,G;;OAEDhJ,kB,GAAqB,UAACgJ,IAAD,EAAU;AAC7B,WAAKE,eAAL,GAAuBF,IAAvB;AACD,G;;OAEDvI,gB,GAAmB,UAACuI,IAAD,EAAU;AAC3B,WAAK7C,aAAL,GAAqB6C,IAArB;AACD,G;;OAEDlI,a,GAAgB,UAACkI,IAAD,EAAU;AACxB,WAAKrC,UAAL,GAAkBqC,IAAlB;AACD,G;;OAED3H,mB,GAAsB,UAAC2H,IAAD,EAAU;AAC9B,WAAKG,gBAAL,GAAwBH,IAAxB;AACD,G;;OAEDvH,mB,GAAsB,UAACuH,IAAD,EAAU;AAC9B,WAAKI,gBAAL,GAAwBJ,IAAxB;AACD,G;;OAEDnH,iB,GAAoB,UAACmH,IAAD,EAAU;AAC5B,WAAK1C,cAAL,GAAsB0C,IAAtB;AACD,G;;OAED/G,c,GAAiB,UAAC+G,IAAD,EAAU;AACzB,WAAKpC,WAAL,GAAmBoC,IAAnB;AACD,G;;OAEDzG,oB,GAAuB,UAACyG,IAAD,EAAU;AAC/B,WAAKzC,iBAAL,GAAyByC,IAAzB;AACD,G;;OAEDrG,oB,GAAuB,UAACqG,IAAD,EAAU;AAC/B,WAAKxC,iBAAL,GAAyBwC,IAAzB;AACD,G;;OAEDjG,kB,GAAqB,UAACiG,IAAD,EAAU;AAC7B,WAAKzF,eAAL,GAAuByF,IAAvB;AACD,G;;OAEDvN,Y,GAAe,UAAC4N,KAAD,EAAW;AACxB,WAAK3N,MAAL,CAAY,OAAK6I,SAAjB,EAA4B,OAAKC,UAAjC;AACD,G;;OAEDhI,Y,GAAe,UAAC6M,KAAD,EAAW;AACxB,WAAK3N,MAAL,CAAY,OAAK6I,SAAjB,EAA4B,OAAKC,UAAjC;;AAEA,QAAI,OAAKzJ,KAAL,CAAW6N,QAAf,EAAyB;AACvB,aAAK7N,KAAL,CAAW6N,QAAX;AACD;AACF,G;;OAEDnM,iB,GAAoB,UAAC4M,KAAD,EAAW;AAC7B,WAAKrO,UAAL,GAAkB,IAAlB;;AAEA,QAAI,OAAKD,KAAL,CAAW4N,aAAf,EAA8B;AAC5B,aAAK5N,KAAL,CAAW4N,aAAX;AACD;AACF,G;;OAEDjM,e,GAAkB,UAAC2M,KAAD,EAAW;AAC3B,WAAKrO,UAAL,GAAkB,KAAlB;;AAEA,QAAI,OAAKD,KAAL,CAAW8N,WAAf,EAA4B;AAC1B,aAAK9N,KAAL,CAAW8N,WAAX;AACD;AACF,G;;OAEDS,uB,GAA0B,UAACpG,MAAD,EAAS3F,KAAT,EAAmB;AAC3C,WAAK0F,eAAL,GAAuBC,MAAvB;;AAEA;AACA,WAAKkB,eAAL;AACA,WAAKvH,OAAL;AACD,G;;OAED0M,kB,GAAqB,UAACrG,MAAD,EAAS3F,KAAT,EAAmB;AACtC,WAAKtC,mBAAL,CAAyBiI,MAAzB,IAAmC6B,KAAKyE,GAAL,CAAS,KAAT,EAAgBzE,KAAKC,GAAL,CAAS,EAAT,EAAazH,KAAb,CAAhB,CAAnC;AACA,WAAK6G,eAAL;AACA,WAAKvH,OAAL;AACD,G;;OAED4M,qB,GAAwB,YAAM;AAC5B,WAAKxG,eAAL,GAAuB,IAAvB;;AAEA,WAAKmB,eAAL;AACA,WAAKvH,OAAL;AACD,G;;OAED6M,oB,GAAuB,UAAChG,GAAD,EAAMhG,MAAN,EAAiB;AACtC,WAAK+F,YAAL,GAAoBC,GAApB;;AAEA;AACA,WAAKU,eAAL;AACA,WAAKvH,OAAL;AACD,G;;OAED8M,e,GAAkB,UAACjG,GAAD,EAAMhG,MAAN,EAAiB;AACjC,WAAKxC,iBAAL,CAAuBwI,GAAvB,IAA8BqB,KAAKyE,GAAL,CAAS,KAAT,EAAgBzE,KAAKC,GAAL,CAAS,EAAT,EAAatH,MAAb,CAAhB,CAA9B;AACA,WAAK0G,eAAL;AACA,WAAKvH,OAAL;AACD,G;;OAED+M,kB,GAAqB,YAAM;AACzB,WAAKnG,YAAL,GAAoB,IAApB;;AAEA,WAAKW,eAAL;AACA,WAAKvH,OAAL;AACD,G;;OAMDA,O,GAAU,UAAC4H,KAAD,EAAQ1J,KAAR,EAAkB;AAC1B,WAAKW,MAAL,CAAY,OAAK6I,SAAjB,EAA4B,OAAKC,UAAjC,EAA6CC,KAA7C,EAAoD1J,SAAS,OAAKA,KAAlE;AACD,G;;OAyIDkN,kB,GAAqB,UAACvE,GAAD,EAAS;AAC5B,QAAI,OAAKxI,iBAAL,CAAuBwI,GAAvB,KAA+B,IAAnC,EAAyC;AACvC,aAAO,OAAKxI,iBAAL,CAAuBwI,GAAvB,CAAP;AACD;;AAED,WAAO,OAAK3I,KAAL,CAAW2N,SAAX,CAAqBhF,GAArB,CAAP;AACD,G;;OAEDwE,oB,GAAuB,UAAChF,MAAD,EAAY;AACjC,QAAI,OAAKjI,mBAAL,CAAyBiI,MAAzB,KAAoC,IAAxC,EAA8C;AAC5C,aAAO,OAAKjI,mBAAL,CAAyBiI,MAAzB,CAAP;AACD;;AAED,WAAO,OAAKnI,KAAL,CAAWwN,WAAX,CAAuBrF,MAAvB,CAAP;AACD,G;;OAkBDqE,S,GAAY,UAAC9I,IAAD,EAAOhB,KAAP,EAAciK,OAAd,EAAuBC,WAAvB,EAAuC;AAAA,QACzCT,QADyC,GACZQ,OADY;AAAA,QAC/BmC,MAD+B,GACZnC,OADY;AAAA,QACvBhK,MADuB,GACZgK,OADY;;;AAGjD,QAAMoC,WAAW;AACfxM,gBAAU,UADK;AAEfoB,YAAM,CAFS;AAGfO,WAAK4K,MAHU;AAIfnM,cAAQA;AAJO,KAAjB;;AAOA,QAAMyJ,cAAc,OAAKpM,KAAL,CAAWoM,WAAX,IAA0B,OAAKA,WAAnD;;AAEA,WACE;AAAA;AAAA,QAAK,KAAK,SAASD,QAAnB;AACK,eAAO4C,QADZ;AAEG3C,kBAAY1J,KAAZ;AAFH,KADF;AAMD,G;;;kBA3+BkB3C,I;;;AAwhCrB,IAAMqC,SAAS;AACbS,aAAW;AACTN,cAAU,UADD;AAEToB,UAAM,CAFG;AAGTO,SAAK,CAHI;AAITC,WAAO,CAJE;AAKTS,YAAQ;AALC,GADE;;AASb7B,iBAAe;AACbR,cAAU,UADG;AAEboB,UAAM,CAFO;AAGbO,SAAK,CAHQ;AAIbC,WAAO,CAJM;AAKbS,YAAQ,CALK;AAMb0C,cAAU;AANG,GATF;;AAkBbrE,mBAAiB;AACfV,cAAU,UADK;AAEfoB,UAAM,CAFS;AAGfO,SAAK,CAHU;AAIfC,WAAO,CAJQ;AAKfS,YAAQ;AALO,GAlBJ;;AA0BbzB,YAAU;AACRZ,cAAU,UADF;AAERoB,UAAM,CAFE;AAGRO,SAAK,CAHG;AAIRC,WAAO,CAJC;AAKRS,YAAQ,CALA;AAMR0C,cAAU;AANF,GA1BG;;AAmCb5D,QAAM;AACJnB,cAAU,UADN;AAEJ+E,cAAU;AAFN,GAnCO;;AAwCb/B,kBAAgB,EAxCH;;AA2CbgD,qBAAmB;AACjBhG,cAAU,UADO;AAEjB2B,SAAK,CAFY;AAGjBU,YAAQ,CAHS;AAIjBpC,WAAO,CAJU;AAKjBwM,qBAAiB,SALA;AAMjBC,YAAQ,WANS;AAOjBC,kBAAc;AAPG,GA3CN;;AAqDbtG,kBAAgB;AACdrG,cAAU,UADI;AAEdoB,UAAM,CAFQ;AAGdQ,WAAO,CAHO;AAIdxB,YAAQ,CAJM;AAKdqM,qBAAiB,SALH;AAMdC,YAAQ,WANM;AAOdC,kBAAc;AAPA;AArDH,CAAf;;AAgEAnP,KAAKqC,MAAL,GAAcA,MAAd","file":"grid.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport GridCalculator from './grid-calculator';\nimport elementResizeDetector from 'element-resize-detector';\nimport IScroll from 'iscroll/build/iscroll-probe';\n\n/* eslint-disable react/no-unused-prop-types */\n\nexport default class Grid extends React.Component {\n  static propTypes = {\n    preloadPixelsX: PropTypes.number,\n\n    preloadPixelsY: PropTypes.number,\n\n    estimatedRowHeight: PropTypes.number,\n\n    estimatedColumnWidth: PropTypes.number,\n\n    columnCount: PropTypes.number.isRequired,\n\n    rowCount: PropTypes.number.isRequired,\n\n    fixedLeftColumnCount: PropTypes.number,\n\n    fixedRightColumnCount: PropTypes.number,\n\n    fixedHeaderCount: PropTypes.number,\n\n    fixedFooterCount: PropTypes.number,\n\n    columnWidth: PropTypes.oneOfType([ PropTypes.number, PropTypes.func ]),\n\n    rowHeight: PropTypes.oneOfType([ PropTypes.number, PropTypes.func ]),\n\n    renderRow: PropTypes.func,\n\n    renderRows: PropTypes.func,\n\n    renderCell: PropTypes.func,\n\n    renderCells: PropTypes.func,\n\n    onExtentsChange: PropTypes.func,\n\n    onScrollStart: PropTypes.func,\n\n    onScroll: PropTypes.func,\n\n    onScrollEnd: PropTypes.func,\n\n    scrollOptions: PropTypes.object\n  };\n\n  static defaultProps = {\n    preloadPixelsX: 0,\n    preloadPixelsY: 0,\n    fixedLeftColumnCount: 0,\n    fixedRightColumnCount: 0,\n    fixedHeaderCount: 0,\n    fixedFooterCount: 0,\n    estimatedColumnWidth: 130,\n    estimatedRowHeight: 30\n  };\n\n  constructor(props) {\n    super(props);\n\n    this._scrolling = false;\n\n    this._pinnedColumnWidths = {};\n    this._pinnedRowHeights = {};\n\n    this._sizeDetector = elementResizeDetector({strategy: 'scroll'});\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this._sizeDetector.listenTo(this._root, this.handleResize);\n\n    this.update(0, 0);\n\n    const scrollOptions = {\n      disableMouse: true,\n      bounce: false, // disable bounce because we're already customizing positioning\n      scrollX: true,\n      freeScroll: true,\n      scrollbars: true,\n      probeType: 3,\n      mouseWheel: true,\n      preventDefault: false,\n      interactiveScrollbars: true,\n      ...this.props.scrollOptions\n    };\n\n    this._scroller = new IScroll(this._scrollInner, scrollOptions);\n    this._scroller.on('scroll', this.handleScroll);\n    this._scroller.on('scrollStart', this.handleScrollStart);\n    this._scroller.on('scrollEnd', this.handleScrollEnd);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.refresh(true, nextProps);\n  }\n\n  componentWillUnmount() {\n    this._sizeDetector.uninstall(this._root);\n\n    this._scroller.off('scroll', this.handleScroll);\n    this._scroller.off('scrollStart', this.handleScrollStart);\n    this._scroller.off('scrollEnd', this.handleScrollEnd);\n    this._scroller.destroy();\n  }\n\n  render() {\n    const {styles} = Grid;\n\n    const contentStyle = {\n      ...styles.scrollContent,\n      position: 'absolute',\n      width: this.calculateScrollableWidth(this.props, this.state.cells),\n      height: this.calculateScrollableHeight(this.props, this.state.cells)\n    };\n\n    return (\n      <div style={styles.container}\n           ref={this.bindRoot}\n           key=\"grid-root\">\n        <div style={styles.scrollOverlay}\n             ref={this.bindScrollOverlay}\n             key=\"grid-scroll-overlay\">\n          <div className=\"scroll-inner\"\n               style={styles.scrollContainer}\n               ref={this.bindScrollInner}\n               key=\"grid-scroll-inner\">\n            <div className={cx('scroll-container')}\n                 style={contentStyle}\n                 key=\"grid-scroll-container\">\n              <div style={styles.gridBody}\n                   key=\"grid-scroll-body\">\n                {this.renderLeftPane()}\n                {this.renderRightPane()}\n                {this.renderCenterPane()}\n                {this.renderColumnResizeGuide()}\n                {this.renderRowResizeGuide()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      width: this.fixedLeftColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindLeftPane}\n           className={cx('left-pane')}\n           style={attrs}\n           key=\"grid-left-pane\">\n        {this.renderLeftPaneHeader()}\n        {this.renderLeftPaneFooter()}\n        {this.renderLeftPaneBody()}\n      </div>\n    );\n  }\n\n  renderLeftPaneHeader() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.calculateFixedHeadersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    return (\n      <div ref={this.bindLeftPaneHeader}\n           className={cx('left-pane-header')}\n           style={attrs}\n           key=\"grid-left-pane-header\">\n        <div className={cx(styles.leftPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-left-pane-header-content\">\n          {this.renderCellRange('left-pane-header', 0, this.props.fixedHeaderCount - 1, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.topLeftRows, this.state.cells.topLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneFooter() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindLeftPaneFooter}\n           className={cx('left-pane-footer')}\n           style={attrs}\n           key=\"grid-left-pane-footer\">\n        <div className={cx(styles.leftPaneFooterContent)}\n             style={contentStyle}\n             key=\"grid-left-pane-footer-content\">\n          {this.renderCellRange('left-pane-footer', fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.bottomLeftRows, this.state.cells.bottomLeftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderLeftPaneBody() {\n    if (!this.state.cells || this.props.fixedLeftColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.calculateFixedHeadersHeight(this.state.cells),\n      right: 0,\n      bottom: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindLeftPaneBody}\n           className={cx('left-pane-body')}\n           style={attrs}\n           key=\"grid-left-pane-body\">\n        <div className={cx(styles.leftPaneBodyContent)}\n             style={contentStyle}\n             key=\"grid-left-pane-body-content\">\n          {this.renderCellRange('left-pane-body', fromRow, toRow, 0, this.props.fixedLeftColumnCount - 1, this.state.cells.leftRows, this.state.cells.leftColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPane() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      right: 0,\n      width: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindRightPane}\n           className={cx('right-pane')}\n           style={attrs}\n           key=\"grid-right-pane\">\n        {this.renderRightPaneHeader()}\n        {this.renderRightPaneFooter()}\n        {this.renderRightPaneBody()}\n      </div>\n    );\n  }\n\n  renderRightPaneHeader() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.calculateFixedHeadersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneHeader}\n           className={cx('right-pane-header')}\n           style={attrs}\n           key=\"grid-right-pane-header\">\n        <div className={cx(styles.rightPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-right-pane-header-content\">\n          {this.renderCellRange('right-pane-header', 0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRightRows, this.state.cells.topRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneFooter() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1 || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n    };\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    return (\n      <div ref={this.bindRightPaneFooter}\n           className={cx('right-pane-footer')}\n           style={attrs}\n           key=\"grid-right-pane-footer\">\n        <div className={cx(styles.rightPaneFooterContent)}\n             style={contentStyle}\n             key=\"grid-right-pane-footer-content\">\n          {this.renderCellRange('right-pane-footer', fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRightRows, this.state.cells.bottomRightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderRightPaneBody() {\n    if (!this.state.cells || this.props.fixedRightColumnCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.calculateFixedHeadersHeight(this.state.cells),\n      right: 0,\n      bottom: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      top: -this.calculateFixedHeadersHeight(this.state.cells),\n      bottom: -this.calculateFixedFootersHeight(this.state.cells),\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.props.columnCount > 0 ? this.props.columnCount - this.props.fixedRightColumnCount : 0;\n    const toColumn = fromColumn ? fromColumn + this.props.fixedRightColumnCount - 1 : null;\n\n    const fromRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[0][0] : null;\n    const toRow = this.state.cells.leftRows.length ? this.state.cells.leftRows[this.state.cells.leftRows.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindRightPaneBody}\n           className={cx('right-pane-body')}\n           style={attrs}\n           key=\"grid-right-pane-body\">\n        <div className={cx(styles.rightPaneBodyContent)}\n             style={contentStyle}\n             key=\"grid-right-pane-body-content\">\n          {this.renderCellRange('right-pane-body', fromRow, toRow, fromColumn, toColumn, this.state.cells.rightRows, this.state.cells.rightColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPane() {\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: this.fixedLeftColumnsWidth,\n      right: this.fixedRightColumnsWidth\n    };\n\n    return (\n      <div ref={this.bindCenterPane}\n           className={cx('center-pane')}\n           style={attrs}\n           key=\"grid-center-pane\">\n        {this.renderCenterPaneHeader()}\n        {this.renderCenterPaneFooter()}\n        {this.renderCenterPaneBody()}\n      </div>\n    );\n  }\n\n  renderCenterPaneHeader() {\n    if (!this.state.cells || this.props.fixedHeaderCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: 0,\n      right: 0,\n      height: this.calculateFixedHeadersHeight(this.state.cells),\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[0][0] : null;\n    const toColumn = this.state.cells.topColumns.length ? this.state.cells.topColumns[this.state.cells.topColumns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneHeader}\n           className={cx('center-pane-header')}\n           style={attrs}\n           key=\"grid-center-pane-header\">\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-center-pane-header-content\">\n          {this.renderCellRange('center-pane-header', 0, this.props.fixedHeaderCount - 1, fromColumn, toColumn, this.state.cells.topRows, this.state.cells.topColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneFooter() {\n    if (!this.state.cells || this.props.fixedFooterCount < 1) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: this.calculateFixedFootersHeight(this.state.cells),\n      overflow: 'visible' // TODO(zhm) this is needed for the column menus, what does it possibly break?\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight,\n      left: -this.fixedLeftColumnsWidth,\n      ...styles.translatedPane\n    };\n\n    const fromColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[0][0] : null;\n    const toColumn = this.state.cells.bottomColumns.length ? this.state.cells.bottomColumns[this.state.cells.bottomColumns.length - 1][0] : null;\n\n    const fromRow = this.props.rowCount > 0 ? this.props.rowCount - this.props.fixedFooterCount : 0;\n    const toRow = fromRow ? fromRow + this.props.fixedFooterCount - 1 : null;\n\n    return (\n      <div ref={this.bindCenterPaneFooter}\n           className={cx('center-pane-footer')}\n           style={attrs}\n           key=\"grid-center-pane-footer\">\n        <div className={cx(styles.centerPaneHeaderContent)}\n             style={contentStyle}\n             key=\"grid-center-pane-footer-content\">\n          {this.renderCellRange('center-pane-footer', fromRow, toRow, fromColumn, toColumn, this.state.cells.bottomRows, this.state.cells.bottomColumns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderCenterPaneBody() {\n    if (!this.state.cells) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const attrs = {\n      ...styles.pane,\n      left: 0,\n      top: this.calculateFixedHeadersHeight(this.state.cells),\n      right: 0,\n      bottom: this.calculateFixedFootersHeight(this.state.cells)\n    };\n\n    const contentStyle = {\n      position: 'absolute',\n      width: this.props.estimatedColumnWidth * this.props.columnCount,\n      height: this.props.estimatedRowHeight * this.props.rowCount,\n      left: -this.fixedLeftColumnsWidth,\n      top: -this.calculateFixedHeadersHeight(this.state.cells),\n      ...styles.translatedPane\n    };\n\n    const fromRow = this.state.cells.rows.length ? this.state.cells.rows[0][0] : null;\n    const toRow = this.state.cells.rows.length ? this.state.cells.rows[this.state.cells.rows.length - 1][0] : null;\n\n    const fromColumn = this.state.cells.columns.length ? this.state.cells.columns[0][0] : null;\n    const toColumn = this.state.cells.columns.length ? this.state.cells.columns[this.state.cells.columns.length - 1][0] : null;\n\n    return (\n      <div ref={this.bindCenterPaneBody}\n           className={cx('center-pane-body')}\n           style={attrs}\n           key=\"grid-center-pane-body\">\n        <div className={cx(styles.centerPaneBodyContent)}\n             style={contentStyle}\n             key=\"grid-center-pane-body-content\">\n          {this.renderCellRange('center-pane-body', fromRow, toRow, fromColumn, toColumn, this.state.cells.rows, this.state.cells.columns)}\n        </div>\n      </div>\n    );\n  }\n\n  renderColumnResizeGuide() {\n    if (this._resizingColumn == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const column = this.state.cells.columns.find((cell) => {\n      return cell[0] === this._resizingColumn;\n    });\n\n    const guideStyle = {\n      ...styles.columnResizeGuide,\n      left: column[1] + column[2],\n      top: this._centerPaneBody.offsetTop - 1\n    };\n\n    return (\n      <div style={guideStyle}\n           key=\"grid-column-resize-guide\" />\n    );\n  }\n\n  renderRowResizeGuide() {\n    if (this._resizingRow == null) {\n      return null;\n    }\n\n    const {styles} = Grid;\n\n    const row = this.state.cells.rows.find((cell) => {\n      return cell[0] === this._resizingRow;\n    });\n\n    const guideStyle = {\n      ...styles.rowResizeGuide,\n      top: row[1] + row[2] - 1,\n      left: this._leftPane.offsetWidth\n    };\n\n    return (\n      <div style={guideStyle}\n           key=\"grid-row-resize-guide\" />\n    );\n  }\n\n  get isScrolling() {\n    return this._scrolling;\n  }\n\n  calculateScrollableWidth({estimatedColumnWidth, columnCount}, cells) {\n    if (!cells || !cells.columns.length) {\n      return estimatedColumnWidth * columnCount;\n    }\n\n    const lastColumn = cells.columns[cells.columns.length - 1];\n    const width = lastColumn[1] + lastColumn[2];\n\n    return width + (((columnCount - 1) - lastColumn[0]) * estimatedColumnWidth);\n  }\n\n  calculateScrollableHeight({estimatedRowHeight, rowCount}, cells) {\n    if (!cells || !cells.rows.length) {\n      return estimatedRowHeight * rowCount;\n    }\n\n    const lastRow = cells.rows[cells.rows.length - 1];\n    const height = lastRow[1] + lastRow[2];\n\n    return height + (((rowCount - 1) - lastRow[0]) * estimatedRowHeight);\n  }\n\n  calculateFixedHeadersHeight(cells) {\n    if (!cells || !cells.topLeftRows.length) {\n      return 0;\n    }\n\n    const lastTopLeftRow = cells.topLeftRows[cells.topLeftRows.length - 1];\n    const topOffset = lastTopLeftRow[1] + lastTopLeftRow[2];\n\n    return topOffset;\n  }\n\n  calculateFixedFootersHeight(cells) {\n    if (!cells || !cells.bottomLeftRows.length) {\n      return 0;\n    }\n\n    const lastBottomRow = cells.bottomLeftRows[cells.bottomLeftRows.length - 1];\n    const lastBottomRowTop = lastBottomRow[1] + lastBottomRow[2];\n\n    return lastBottomRowTop;\n  }\n\n  get fixedRightColumnsWidth() {\n    if (!this.state.cells || this.state.cells.rightColumns.length === 0) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.rightColumns[this.state.cells.rightColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  get fixedLeftColumnsWidth() {\n    if (!this.state.cells || !this.state.cells.leftColumns.length) {\n      return 0;\n    }\n\n    const lastColumn = this.state.cells.leftColumns[this.state.cells.leftColumns.length - 1];\n    const lastOffset = lastColumn[1] + lastColumn[2];\n\n    return lastOffset;\n  }\n\n  bindRoot = (node) => {\n    this._root = node;\n  }\n\n  bindScrollOverlay = (node) => {\n    this._scrollOverlay = node;\n  }\n\n  bindScrollInner = (node) => {\n    this._scrollInner = node;\n  }\n\n  bindLeftPane = (node) => {\n    this._leftPane = node;\n  }\n\n  bindLeftPaneHeader = (node) => {\n    this._leftPaneHeader = node;\n  }\n\n  bindLeftPaneFooter = (node) => {\n    this._leftPaneFooter = node;\n  }\n\n  bindLeftPaneBody = (node) => {\n    this._leftPaneBody = node;\n  }\n\n  bindRightPane = (node) => {\n    this._rightPane = node;\n  }\n\n  bindRightPaneHeader = (node) => {\n    this._rightPaneHeader = node;\n  }\n\n  bindRightPaneFooter = (node) => {\n    this._rightPaneFooter = node;\n  }\n\n  bindRightPaneBody = (node) => {\n    this._rightPaneBody = node;\n  }\n\n  bindCenterPane = (node) => {\n    this._centerPane = node;\n  }\n\n  bindCenterPaneHeader = (node) => {\n    this._centerPaneHeader = node;\n  }\n\n  bindCenterPaneFooter = (node) => {\n    this._centerPaneFooter = node;\n  }\n\n  bindCenterPaneBody = (node) => {\n    this._centerPaneBody = node;\n  }\n\n  handleResize = (event) => {\n    this.update(this.scrollTop, this.scrollLeft);\n  }\n\n  handleScroll = (event) => {\n    this.update(this.scrollTop, this.scrollLeft);\n\n    if (this.props.onScroll) {\n      this.props.onScroll(this);\n    }\n  }\n\n  handleScrollStart = (event) => {\n    this._scrolling = true;\n\n    if (this.props.onScrollStart) {\n      this.props.onScrollStart(this);\n    }\n  }\n\n  handleScrollEnd = (event) => {\n    this._scrolling = false;\n\n    if (this.props.onScrollEnd) {\n      this.props.onScrollEnd(this);\n    }\n  }\n\n  handleColumnResizeStart = (column, width) => {\n    this._resizingColumn = column;\n\n    // this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResize = (column, width) => {\n    this._pinnedColumnWidths[column] = Math.min(10000, Math.max(20, width));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleColumnResizeEnd = () => {\n    this._resizingColumn = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeStart = (row, height) => {\n    this._resizingRow = row;\n\n    // this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResize = (row, height) => {\n    this._pinnedRowHeights[row] = Math.min(10000, Math.max(20, height));\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  handleRowResizeEnd = () => {\n    this._resizingRow = null;\n\n    this.invalidateSizes();\n    this.refresh();\n  }\n\n  invalidateSizes() {\n    this.calculator.invalidate();\n  }\n\n  refresh = (force, props) => {\n    this.update(this.scrollTop, this.scrollLeft, force, props || this.props);\n  }\n\n  update(scrollTop, scrollLeft, force, props) {\n    if (!this._root) {\n      return;\n    }\n\n    props = props || this.props;\n\n    const x = scrollLeft - props.preloadPixelsX;\n    const y = scrollTop - props.preloadPixelsY;\n\n    const bounds = {\n      left: Math.max(0, x),\n      top: Math.max(0, y),\n      width: this._root.clientWidth + (2 * props.preloadPixelsX) + (x < 0 ? x : 0),\n      height: this._root.clientHeight + (2 * props.preloadPixelsY) + (y < 0 ? y : 0)\n    };\n\n    const cells = this.calculator.cellsWithinBounds(bounds, props.rowCount, props.columnCount);\n\n    if (cells.changed || force) {\n      const fromRow = cells.rows.length ? cells.rows[0][0] : null;\n      const toRow = cells.rows.length ? cells.rows[cells.rows.length - 1][0] : null;\n      const fromColumn = cells.columns.length ? cells.columns[0][0] : null;\n      const toColumn = cells.columns.length ? cells.columns[cells.columns.length - 1][0] : null;\n\n      if (props.onExtentsChange) {\n        props.onExtentsChange(fromRow, toRow, fromColumn, toColumn);\n      }\n\n      this.setState({cells: cells});\n    }\n\n    if (cells) {\n      this.setScroll(scrollLeft, scrollTop, cells);\n    }\n\n    const scrollableWidth = this.calculateScrollableWidth(props, cells);\n    const scrollableHeight = this.calculateScrollableHeight(props, cells);\n\n    // if the srollable width or height changes, refresh the scroller\n    if (force || this._lastScrollableWidth !== scrollableWidth || this._lastScrollableHeight !== scrollableHeight) {\n      this._lastScrollableWidth = scrollableWidth;\n      this._lastScrollableHeight = scrollableHeight;\n\n      // if there were no cells, there might be more cells above. This handles a case where the table renders at a scroll\n      // offset with no data. For example, scroll down in a huge list of a results, then filter it to only a few results.\n      // The scroll view is left at a large offset but there's no data. Because we don't know how far we'd have to move\n      // up to find data, the simplest thing to do is to go to position 0, 0.\n      const diffY = Math.max(0, (scrollTop + this._root.clientHeight) - Math.max(this._root.clientHeight, scrollableHeight));\n      const diffX = Math.max(0, (scrollLeft + this._root.clientWidth) - Math.max(this._root.clientWidth, scrollableWidth));\n\n      setTimeout(() => {\n        if (diffY > 0 || diffX > 0) {\n          const updatedScrollLeft = scrollLeft - diffX;\n          const updatedScrollTop = scrollTop - diffY;\n\n          this._scroller.scrollTo(-updatedScrollLeft, -updatedScrollTop);\n          this.update(updatedScrollTop, updatedScrollLeft);\n        }\n\n        this._scroller.refresh();\n      }, 1);\n    }\n  }\n\n  setScroll(x, y, cells) {\n    const fixedHeadersHeight = this.calculateFixedHeadersHeight(cells);\n\n    if (this._leftPaneBody) {\n      this._leftPaneBody.childNodes[0].style.top = (-y - fixedHeadersHeight) + 'px';\n    }\n\n    if (this._rightPaneBody) {\n      this._rightPaneBody.childNodes[0].style.top = (-y - fixedHeadersHeight) + 'px';\n    }\n\n    if (this._centerPaneHeader) {\n      this._centerPaneHeader.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneFooter) {\n      this._centerPaneFooter.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._centerPaneBody) {\n      this._centerPaneBody.childNodes[0].style.top = (-y - fixedHeadersHeight) + 'px';\n      this._centerPaneBody.childNodes[0].style.left = (-x - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._leftPane) {\n      this._leftPane.style.left = x + 'px';\n      this._leftPane.style.top = y + 'px';\n      this._leftPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    }\n\n    if (this._rightPane) {\n      this._rightPane.style.left = (x + this._scrollOverlay.offsetWidth - this.fixedRightColumnsWidth) + 'px';\n      this._rightPane.style.top = y + 'px';\n      this._rightPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n    }\n\n    if (this._centerPane) {\n      this._centerPane.style.left = (x + this.fixedLeftColumnsWidth) + 'px';\n      this._centerPane.style.top = y + 'px';\n      this._centerPane.style.height = this._scrollOverlay.offsetHeight + 'px';\n      this._centerPane.style.width = (this._scrollOverlay.offsetWidth - this.fixedRightColumnsWidth - this.fixedLeftColumnsWidth) + 'px';\n    }\n\n    if (this._scrollInner) {\n      if (this._scrollInner.childNodes[0].offsetHeight < this._scrollInner.offsetHeight) {\n        this._scrollInner.childNodes[0].style.height = this._scrollInner.offsetHeight + 'px';\n      }\n\n      if (this._scrollInner.childNodes[0].offsetWidth < this._scrollInner.offsetWidth) {\n        this._scrollInner.childNodes[0].style.width = this._scrollInner.offsetWidth + 'px';\n      }\n    }\n  }\n\n  get calculator() {\n    if (!this._calculator) {\n      this._calculator = new GridCalculator();\n      this._calculator.estimatedColumnWidth = this.props.estimatedColumnWidth;\n      this._calculator.estimatedRowHeight = this.props.estimatedRowHeight;\n      this._calculator.fixedLeftColumnCount = this.props.fixedLeftColumnCount;\n      this._calculator.fixedRightColumnCount = this.props.fixedRightColumnCount;\n      this._calculator.fixedHeaderCount = this.props.fixedHeaderCount;\n      this._calculator.fixedFooterCount = this.props.fixedFooterCount;\n      this._calculator.calculateRowHeight = this.calculateRowHeight;\n      this._calculator.calculateColumnWidth = this.calculateColumnWidth;\n    }\n\n    return this._calculator;\n  }\n\n  calculateRowHeight = (row) => {\n    if (this._pinnedRowHeights[row] != null) {\n      return this._pinnedRowHeights[row];\n    }\n\n    return this.props.rowHeight(row);\n  }\n\n  calculateColumnWidth = (column) => {\n    if (this._pinnedColumnWidths[column] != null) {\n      return this._pinnedColumnWidths[column];\n    }\n\n    return this.props.columnWidth(column);\n  }\n\n  clearPinnedWidths() {\n    this._pinnedColumnWidths = {};\n  }\n\n  clearPinnedWidth(columnIndex) {\n    delete this._pinnedColumnWidths[columnIndex];\n  }\n\n  clearPinnedHeights() {\n    this._pinnedRowHeights = {};\n  }\n\n  clearPinnedHeight(rowIndex) {\n    delete this._pinnedRowHeights[rowIndex];\n  }\n\n  renderRow = (pane, cells, rowData, columnRange) => {\n    const [ rowIndex, rowTop, height ] = rowData;\n\n    const rowStyle = {\n      position: 'absolute',\n      left: 0,\n      top: rowTop,\n      height: height\n    };\n\n    const renderCells = this.props.renderCells || this.renderCells;\n\n    return (\n      <div key={'row-' + rowIndex}\n           style={rowStyle}>\n        {renderCells(cells)}\n      </div>\n    );\n  }\n\n  renderCells(cells) {\n    return cells;\n  }\n\n  renderRows(rows) {\n    return rows;\n  }\n\n  renderCellRange(pane, fromRow, toRow, fromColumn, toColumn, rows, columns) {\n    const rowRange = [];\n\n    const renderCell = this.props.renderCell;\n    const renderRow = this.props.renderRow || this.renderRow;\n    const renderRows = this.props.renderRows || this.renderRows;\n\n    for (let row = toRow, visibleRowIndex = 0; row >= fromRow; --row, ++visibleRowIndex) {\n      const rowCells = [];\n      const rowData = rows[row - fromRow];\n      const columnRange = [];\n\n      for (let column = toColumn, visibleColumnIndex = 0; column >= fromColumn; --column, ++visibleColumnIndex) {\n        const columnData = columns[column - fromColumn];\n\n        columnRange.push(columnData);\n\n        rowCells.push(renderCell(pane, row, rowData, column, columnData, this, visibleRowIndex, visibleColumnIndex));\n      }\n\n      rowRange.push(renderRow(pane, rowCells, rowData, columnRange));\n    }\n\n    return renderRows(rowRange);\n  }\n\n  get scrollTop() {\n    return -this._scroller.y;\n  }\n\n  get scrollLeft() {\n    return -this._scroller.x;\n  }\n}\n\nconst styles = {\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  scrollOverlay: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  scrollContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  },\n\n  gridBody: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden'\n  },\n\n  pane: {\n    position: 'absolute',\n    overflow: 'hidden'\n  },\n\n  translatedPane: {\n  },\n\n  columnResizeGuide: {\n    position: 'absolute',\n    top: 1,\n    bottom: 0,\n    width: 1,\n    backgroundColor: '#18a3f7',\n    cursor: 'ew-resize',\n    borderRadius: 0\n  },\n\n  rowResizeGuide: {\n    position: 'absolute',\n    left: 1,\n    right: 0,\n    height: 1,\n    backgroundColor: '#18a3f7',\n    cursor: 'ns-resize',\n    borderRadius: 0\n  }\n};\n\nGrid.styles = styles;\n"]}